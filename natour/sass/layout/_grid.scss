.row {
    max-width: $grid-width;
    margin: 0 auto;
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix; // to make the floated element the height of the content, because floated elements by default have a height of 0

    // Use square brackets to select attributes like "src" for img tags.
    // The '^' means the start of the class name. So in this case find all classes starting with 'col-'.
    // Use '*' for classes that contain x, anywhere in the class name.
    // Use '$' for classes that end with x.
    [class^="col-"] {
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }         
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2); // hash and curly braces necessary to use a sass variable for a value in a calc
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }        
    }


    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3); // 2 gutters & 3 cols for this layout
    }
    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}); // spans 2 columns. So 2 x a single column plus gutter width.
    }


    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4); // 3 gutters & 4 cols for this layout
    }
    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}); // spans 2 columns
    }
    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal})); // spans 3 columns
    }

}